
lspci
sudo ifconfig
hcitool

nmcli con down <wifiname>
nmcli con down Extreme
nmcli con up Extreme
nmcli d wifi list
nmcli d wifi connect Extreme

sudo dpkg -i *.deb
sudo apt-get update
sudo apt-get install -f
sudo dpgk -i *.deb

mv /etc/localtime /etc/localtime.bak
ln -sf /usr/share/zoneinfo/Asia/Hong_Kong /etc/localtime

gpgconf --reload gpg-agent
gpg-agent --daemon

gpg

# To open the portal for a free wifi that requires some kind of authentication, connect to the wifi, then visit a non-https (http only) site such as www.weather.com

hcitool scan

# connect to bt
bluetoothctl
- devices
- pairable on
- pairable off
- scan on
- devices
** it works! 
- pair <MAC>
- trust <MAC>
- connect <MAC>

# display current network usage
sudo nload -m

# get some info about graphics and shit
glxinfo | grep OpenGL

# see all your networks w/ plaintext passwordz
cat /etc/NetworkManager/system-connections/ 

alsamixer

sudo fdisk -l
sudo mount -t exfat /dev/sda1 /mnt
sudo mount /dev/sda1 /mnt

npm install -g spoof
sudo spoof randomize en0

ifconfig
ip link show wlp0s20f3 # c0:b6:f9:2c:a1:00
ip link set dev wlp0s20f3 down
ip link set dev wlp0s20f3 address XX:XX:XX:XX:XX:XX
ip link set dev wlp0s20f3 up


# record audio from sound card
pacmd list | grep ".\monitor"
pacat --record -d alsa_output.pci-0000_00_1f.3.analog-stereo.monitor > dump.raw
sox -t raw -r 44100 -e signed-integer -L -b 16 -c 2 dump.raw output.wav
xdg-open output.wav

parec --list-file-formats
parec -d alsa_output.pci-0000_00_1f.3.analog-stereo.monitor --file-format=wav output.wav

xev

ncdu

apt-get install --only-upgrade code

# nvidia graphics drivers and stuff

nvidia-settings
lsmod | grep nvidia
lsmod | grep nouveau
lspci -vnn | grep VGA -A 25
ubuntu-drivers devices
glxinfo | grep -i vendor
find /dev -group video


prime-select nvidia
prime-select intel
prime-select query

xrandr --query

sensors
watch sensors

find / -type f -size +50M -exec du -h {} \; | sort -n

# Resize a volume that magically got bigger (eg Digital Ocean volume increase)
# This fixes `df -h` not showing the right disk usage for the volume.
resize2fs /dev/sda

lsblk |& grep sd
blkid | grep Samsung
ls -lha /dev/disk/by-uuid/
# vim /etc/fstab

alsamixer
/usr/bin/amixer -c 0 sset "Auto-Mute Mode" Disabled
alsactl store
# to disable automute, it seems necessary to disable the LED-follow thing too
# Mic-Mute-LED Mode = Follow Mute

# Python programs, wget, youtube-dl, all failing because 'failed to verify certificate'
# I used a --no-check-certificate to fix most problems, until speedtest-cli didn't have that flag.
# This fixes the problem, at least for speedtest-cli.
# https://github.com/ritiek/spotify-downloader/issues/480
sudo update-ca-certificates --fresh
export SSL_CERT_DIR=/etc/ssl/certs

# and making sure your system time syncs correctly is also important, but wasn't directly relevant in my case
sudo apt-get install ntp

# generate a password
openssl rand -base64 32
openssl rand -base64 18

nmcli radio wifi off
nmcli radio wifi on

sudo docker system prune -a
sudo docker rm $(sudo docker ps -a -q)

sudo fdisk -l
sudo blkid
sudo lsblk

mount -o remount,uid=1000,gid=1000 /home/ia/SAMSUNG_T5
mount /dev/sdb1 /home/ia/SAMSUNG_T5 -o uid=1000 -o gid=1000 -o nonempty


xmodmap -pm

xmodmap -e 'add mod3 = Scroll_Lock'

# To get an AwesomeWM client instance/ class from the CLI:
xprop WM_CLASS
https://awesomewm.org/doc/api/classes/client.html#client.class

ip route | grep default
arp-scan --interface=wlp0s20f3 --localnet

gpg --output mydata.encrypted --symmetric --cipher-algo AES256 mydata.data
gpg --symmetric --cipher-algo AES256 mydata.data
gpg -u DEADBEEF --symmetric --cipher-algo AES256 mydata.data # yields mydata.data.gpg
gpg --decrypt mydata.data.gpg


for f in ./*; do mv "$f" ~/SAMSUNG_T5_3/Audio/$(echo $f | cut -d':' -f1)_$(echo $f | cut -d':' -f2).mp3; done

rsync -rtDvz
